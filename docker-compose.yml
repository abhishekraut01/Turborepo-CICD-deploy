services:
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/monorepo_db}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
      args:
        - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/monorepo_db}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/monorepo_db}
    depends_on:
      - backend
      - db
    networks:
      - app-network

  websockets:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.websockets
    ports:
      - "9001:9000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/monorepo_db}
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=monorepo_db
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
